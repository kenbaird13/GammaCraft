# File Specification: https://gist.github.com/Shadows-of-Fire/88ac714a758636c57a52e32ace5474c1

# Apotheosis Enchantment Information

# This file contains configurable data for each enchantment.
# The names of each category correspond to the registry names of every loaded enchantment.


"minecraft:protection" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:fire_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:feather_falling" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:blast_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:projectile_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:respiration" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:aqua_affinity" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:thorns" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:depth_strider" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:frost_walker" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:binding_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:soul_speed" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:swift_sneak" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:sharpness" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:smite" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:bane_of_arthropods" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:knockback" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:fire_aspect" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:looting" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:sweeping" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:efficiency" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:silk_touch" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:unbreaking" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:fortune" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:power" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:punch" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:flame" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:infinity" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:luck_of_the_sea" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:lure" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:loyalty" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:impaling" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:riptide" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:channeling" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:multishot" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:quick_charge" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:piercing" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:mending" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:vanishing_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquebattle:lunatic_despair" {
    # The max level of this enchantment - originally 2.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquebattle:hecates_blessing" {
    # The max level of this enchantment - originally 3.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquebattle:ares_fragment" {
    # The max level of this enchantment - originally 4.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquebattle:ifrits_blessing" {
    # The max level of this enchantment - originally 5.
    # Default: 19; Range: [1 ~ 127]
    I:"Max Level"=19

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"uniquebattle:ifrits_judgement" {
    # The max level of this enchantment - originally 2.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquebattle:golem_soul" {
    # The max level of this enchantment - originally 4.
    # Default: 15; Range: [1 ~ 127]
    I:"Max Level"=15

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"uniquebattle:fury" {
    # The max level of this enchantment - originally 3.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquebattle:streakers_will" {
    # The max level of this enchantment - originally 4.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquebattle:iron_bird" {
    # The max level of this enchantment - originally 4.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquebattle:deep_wounds" {
    # The max level of this enchantment - originally 4.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquebattle:wars_odium" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquebattle:ares_grace" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"uniquebattle:granis_soul" {
    # The max level of this enchantment - originally 5.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquebattle:artemis_soul" {
    # The max level of this enchantment - originally 7.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Loot Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquebattle:snare" {
    # The max level of this enchantment - originally 3.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniqueutil:sleipnirs_grace" {
    # The max level of this enchantment - originally 10.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:famines_odium" {
    # The max level of this enchantment - originally 2.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:thick_pick" {
    # The max level of this enchantment - originally 2.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:rocket_man" {
    # The max level of this enchantment - originally 3.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:climber" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniqueutil:phanes_regret" {
    # The max level of this enchantment - originally 2.
    # Default: 15; Range: [1 ~ 127]
    I:"Max Level"=15

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:poseidons_soul" {
    # The max level of this enchantment - originally 3.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:mounting_aegis" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:demeters_blessing" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:demeters_soul" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:ambrosia" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:essence_of_slime" {
    # The max level of this enchantment - originally 5.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:adept" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:alchemists_blessing" {
    # The max level of this enchantment - originally 4.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:anemoi_fragment" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:reinforced" {
    # The max level of this enchantment - originally 10.
    # Default: 15; Range: [1 ~ 127]
    I:"Max Level"=15

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniqueutil:resonance" {
    # The max level of this enchantment - originally 4.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniqueutil:sages_soul" {
    # The max level of this enchantment - originally 10.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniqueutil:pegasus_soul" {
    # The max level of this enchantment - originally 5.
    # Default: 19; Range: [1 ~ 127]
    I:"Max Level"=19

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:berserker" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:ameliorated_sharpness" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:ameliorated_smite" {
    # The max level of this enchantment - originally 5.
    # Default: 14; Range: [1 ~ 127]
    I:"Max Level"=14

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:ameliorated_bane_of_arthropods" {
    # The max level of this enchantment - originally 5.
    # Default: 14; Range: [1 ~ 127]
    I:"Max Level"=14

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:vitae" {
    # The max level of this enchantment - originally 5.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:swift" {
    # The max level of this enchantment - originally 2.
    # Default: 6; Range: [1 ~ 127]
    I:"Max Level"=6

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquee:sages_blessing" {
    # The max level of this enchantment - originally 5.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquee:ender_eyes" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquee:focused_impact" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:bone_crusher" {
    # The max level of this enchantment - originally 4.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:range" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquee:treasurers_eyes" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:swift_blade" {
    # The max level of this enchantment - originally 2.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Level"=2

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:spartan_weapon" {
    # The max level of this enchantment - originally 5.
    # Default: 15; Range: [1 ~ 127]
    I:"Max Level"=15

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquee:perpetual_strike" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:climate_tranquility" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:momentum" {
    # The max level of this enchantment - originally 3.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:ender_mending" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:smart_ass" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:warriors_grace" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:ender_marksmen" {
    # The max level of this enchantment - originally 5.
    # Default: 6; Range: [1 ~ 127]
    I:"Max Level"=6

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:ares_blessing" {
    # The max level of this enchantment - originally 3.
    # Default: 17; Range: [1 ~ 127]
    I:"Max Level"=17

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:alchemists_grace" {
    # The max level of this enchantment - originally 4.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:cloud_walker" {
    # The max level of this enchantment - originally 4.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:fast_food" {
    # The max level of this enchantment - originally 2.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:natures_grace" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:ecological" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:phoenixs_blessing" {
    # The max level of this enchantment - originally 2.
    # Default: 16; Range: [1 ~ 127]
    I:"Max Level"=16

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:midas_blessing" {
    # The max level of this enchantment - originally 3.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:ifrits_grace" {
    # The max level of this enchantment - originally 3.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:icarus_aegis" {
    # The max level of this enchantment - originally 3.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:ender_librarian" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:endest_reap" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:grimoire" {
    # The max level of this enchantment - originally 5.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"uniquee:pestilences_odium" {
    # The max level of this enchantment - originally 2.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"uniquee:deaths_odium" {
    # The max level of this enchantment - originally 2.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"uniquee:combo_star" {
    # The max level of this enchantment - originally 2.
    # Default: 6; Range: [1 ~ 127]
    I:"Max Level"=6

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"obscure_api:mirror" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"obscure_api:fast_spin" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"obscure_api:distance" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"apotheosis:miners_fervor" {
    # The max level of this enchantment - originally 5.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:stable_footing" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:scavenger" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:life_mending" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:icy_thorns" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:tempting" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"apotheosis:shield_bash" {
    # The max level of this enchantment - originally 4.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:reflective" {
    # The max level of this enchantment - originally 5.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:berserkers_fury" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:knowledge" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:splitting" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:natures_blessing" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:rebounding" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:bane_of_illagers" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"apotheosis:obliteration" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:crescendo" {
    # The max level of this enchantment - originally 5.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:infusion" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:endless_quiver" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:chromatic" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:exploitation" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:growth_serum" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:earths_boon" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:chainsaw" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:spearfishing" {
    # The max level of this enchantment - originally 5.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"apotheosis:capturing" {
    # The max level of this enchantment - originally 5.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"twilightforest:fire_react" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"twilightforest:chill_aura" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"twilightforest:destruction" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"mysticalagriculture:mystical_enlightenment" {
    I:"Max Level"=9
    I:"Max Loot Level"=5
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"ars_nouveau:mana_regen" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"ars_nouveau:mana_boost" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"ars_nouveau:reactive" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"arsomega:proactive" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"arsomega:durability_cast" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"tombstone:soulbound" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:magic_siphon" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:plague_bringer" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:curse_of_bones" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:blessing" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:frostbite" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:spectral_bite" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"vampirism:crossbowfrugality" {
    I:"Max Level"=10
    I:"Max Loot Level"=2
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=VERY_RARE
}


"vampirism:vampireslayer" {
    I:"Max Level"=9
    I:"Max Loot Level"=5
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"origins:water_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


